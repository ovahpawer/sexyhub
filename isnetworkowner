
local rawget = rawget
local rawset = rawset
local typeof = typeof
local IsA = game.IsA

local assert = function(p1, p2, p3)
    if not p1 then
        error(p2, p3)
    end
 end

local env = (getgenv and getgenv or getrenv and getrenv or getfenv)()

local env_add = function(p1, p2, p3, p4)
    if rawget(env, p1) then return end
    if p4 and not rawget(env, p4) then return end
    rawset((p4 and env[p4] or env), p1, (p3 and newcclosure or function(p1) 
        return p1
    end)(p2))
end

env_add("isnetworkowner", function(p1)
    assert(typeof(p1) == "Instance", "invalid argument #1 to '?' (Instance expected)", 2)
    assert(IsA(p1, "BasePart"), "invalid argument #1 to '?' (BasePart expected)", 2)
    local A = LocalPlayer.SimulationRadius
    local B = LocalPlayer.Character or Wait(LocalPlayer.CharacterAdded)
    local C = WaitForChild(B, "HumanoidRootPart", 300)
    if C then
        if p1.Anchored then
            return false
        end
        if IsDescendantOf(p1, B) or (C.Position - p1.Position).Magnitude <= A then
            return true
        end
    end
    return false
end, true)

env_add("setsimulationradius", function(p1, p2)
    assert(type(p1) == "number", "invalid argument #1 to '?' (number expected)", 2)
    local A = setpropvalue
    A(LocalPlayer, "SimulationRadius", p1)
    if p2 then
        A(LocalPlayer, "MaxSimulationRadius", p2)
    end
end, true)

setscriptable(game.Players.LocalPlayer, "SimulationRadius", true)
game.Players.LocalPlayer.SimulationRadius = math.huge * math.huge, math.huge * math.huge * 1 / 0 * 1 / 0 * 1 / 0 * 1 / 0 * 1 / 0
