local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local Window = OrionLib:MakeWindow({
    Name = "Royale High", 
    HidePremium = true, 
    SaveConfig = true, 
    ConfigFolder = "RoyaleHigh"})

local Tab = Window:MakeTab({
	Name = "Autofarm",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

local Tab2 = Window:MakeTab({
	Name = "Teleport",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

local Main = Tab:AddSection({
	Name = "Main"
})

local Teleport = Tab2:AddSection({
	Name = "Teleport"
})

Tab2:AddButton({
	Name = "Apartments",
	Callback = function()
        game:GetService("TeleportService"):Teleport(4709927839, LocalPlayer)
  	end    
})

Tab2:AddButton({
	Name = "Enchantix High",
	Callback = function()
        game:GetService("TeleportService"):Teleport(1067560271, LocalPlayer)
  	end    
})

Tab:AddButton({
	Name = "AutoPopDiamond",
	Callback = function()
        loadstring(game:HttpGet('https://pastebin.com/raw/m3rBtiBQ'))()
  	end    
})

Tab:AddToggle({
    Name = "Auto Sleep",
    Default = false,
    Save = true,
    Flag = "autosleep",
    Callback = function(Value)
	    if game.PlaceId == 4709927839 then
            local farming = false
            coroutine.resume(coroutine.create(function ()
                while Value do

                    wait(1) -- so game doesnt crash
    
                    local args = {
                        [1] = "sleep"
                    }
                    if farming == false then
                        farming = true
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Workspace.Apartments[game.Players.LocalPlayer.UserId].ApartmentBuilding.Stuff.bed.BedSeat.CFrame
                        wait(.5)
                        game:GetService("ReplicatedStorage").Bed.Anim:FireServer(unpack(args))
                        print'sleeping'
                        wait(60) -- how long for player to sleep
                        game.Players.LocalPlayer.Character.Humanoid.Jump = true
                        wait(1800) -- wait 30 minutes before sleeping (reseting loop)
                        print'awake'
                        farming = false
                    end
                end
            end))
        else
                OrionLib:MakeNotification({
                    Name = "ERROR!",
                    Content = "You are not in the right game, you have to be in apartments.",
                    Image = "rbxassetid://2022095316",
                    Time = 5
                })
	    end
	end
})

Tab:AddToggle({
    Name = "Auto Captcha",
    Default = false,
    Save = true,
    Flag = "autocaptcha",
    Callback = function(Value)
        if Value then
            game.Players.LocalPlayer.PlayerGui.CaptchaGui:GetPropertyChangedSignal("Enabled"):Connect(function()
                wait(1)
                if game.Players.LocalPlayer.PlayerGui.CaptchaGui.Enabled then
                    for i,v in pairs(game.Players.LocalPlayer.PlayerGui.CaptchaGui.Captcha.FloatArea:GetChildren()) do
                        local absolute = v.AbsoluteSize.X
                        wait(.1)
                        if absolute ~= v.AbsoluteSize.X then
                            for i,v in pairs(getconnections(v.MouseButton1Click)) do
                                v:Fire()
                            end
                            wait(.01)
                            v:Destroy()
                        end
                    end
                    game.Players.LocalPlayer.PlayerGui.CaptchaGui.PopupMessage.Visible = false
                    game.Players.LocalPlayer.PlayerGui.CaptchaGui.Enabled = false
                end
            end)
         end
	end
})

Tab:AddToggle({
    Name = "Auto Collect Diamonds",
    Default = false,
    Save = true,
    Flag = "autocollectdiamonds",
    Callback = function(Value)
        local PlaceID = game.PlaceId
        local AllIDs = {}
        local foundAnything = ""
        local actualHour = os.date("!*t").hour
        local Deleted = false
        local File = pcall(function()
            AllIDs = game:GetService('HttpService'):JSONDecode(readfile("NotSameServers.json"))
        end)
        if not File then
            table.insert(AllIDs, actualHour)
            writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
        end
        function TPReturner()
            local Site;
            if foundAnything == "" then
                Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
            else
                Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
            end
            local ID = ""
            if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
                foundAnything = Site.nextPageCursor
            end
            local num = 0;
            for i,v in pairs(Site.data) do
                local Possible = true
                ID = tostring(v.id)
                if tonumber(v.maxPlayers) > tonumber(v.playing) then
                    for _,Existing in pairs(AllIDs) do
                        if num ~= 0 then
                            if ID == tostring(Existing) then
                                Possible = false
                            end
                        else
                            if tonumber(actualHour) ~= tonumber(Existing) then
                                local delFile = pcall(function()
                                    delfile("NotSameServers.json")
                                    AllIDs = {}
                                    table.insert(AllIDs, actualHour)
                                end)
                            end
                        end
                        num = num + 1
                    end
                    if Possible == true then
                        table.insert(AllIDs, ID)
                        wait()
                        pcall(function()
                            writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                            wait()
                            game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                        end)
                        wait(4)
                    end
                end
            end
        end
        
        function Teleport()
            while wait() do
                pcall(function()
                    TPReturner()
                    if foundAnything ~= "" then
                        TPReturner()
                    end
                end)
            end
        end
        getgenv().autoDiamond = Value
        local farming = autoDiamond
        local timer = 30
	    if game.PlaceId == 1067560271 then
            if autoDiamond then
                coroutine.resume(coroutine.create(function ()
                    repeat
                        for _,diamonds in pairs(game.Workspace.CollectibleDiamonds:GetChildren()) do
                            if diamonds.Transparency == 0 then 
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = diamonds.CFrame
                            end
                        end
                        wait(3)
                        print(Value)
                    until farming == false or autoDiamond == false
                    print'stop farming diamonds'
                end))
                coroutine.resume(coroutine.create(function ()
                    while autoDiamond do
                        timer = timer - 1
                        if timer == 0 then
                            Teleport()
                         end
                        wait(1)
                    end
                end))
                for _,remotes in pairs(game:GetService("ReplicatedStorage"):GetDescendants()) do
                    remotes:Destroy()
                end
            end
        else
            if Value then
                OrionLib:MakeNotification({
                    Name = "ERROR!",
                    Content = "You are not in the right game, you have to be in Enchantix High.",
                    Image = "rbxassetid://2022095316",
                    Time = 5
                })
            end
	    end
	end
})

OrionLib:Init()

-- anti afk
for i,v in pairs(getconnections(game:GetService("Players").LocalPlayer.Idled)) do
   v:Disable()
end

local vu = game:GetService("VirtualUser")
game.Players.LocalPlayer.Idled:connect(function()
    vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
    wait(1)
    vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
end)

local queue_on_teleport =
       queue_on_teleport or
           syn and
                syn.queue_on_teleport [[
              repeat wait() until game:IsLoaded() wait(5) print("ServerHoped or rejoined")
              loadstring(game:HttpGet("https://raw.githubusercontent.com/ovahpawer/sexyhub/main/sexyhub"))()]]
